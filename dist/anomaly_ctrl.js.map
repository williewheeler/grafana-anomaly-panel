{"version":3,"sources":["../src/anomaly_ctrl.js"],"names":["PanelCtrl","_","panelDefaults","AnomalyCtrl","$scope","$injector","defaultsDeep","panel","events","on","onInitEditMode","bind","onPanelTeardown","render","addEditorTab","scope","elem","$panelContainer","find","css","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,MAAAA,S,kBAAAA,S;;AACDC,MAAAA,C;;;AAGDC,MAAAA,a,GAAgB,E;;6BAGTC,W;;;AAEX,6BAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAAA;;AAC7B,4HAAMD,MAAN,EAAcC,SAAd;;AACAJ,UAAAA,CAAC,CAACK,YAAF,CAAe,MAAKC,KAApB,EAA2BL,aAA3B;;AAEA,gBAAKM,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKC,cAAL,CAAoBC,IAApB,OAAjC;;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKG,eAAL,CAAqBD,IAArB,OAAjC;;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,mBAAf,EAAoC,MAAKI,MAAL,CAAYF,IAAZ,OAApC;;AAN6B;AAO9B,S,CAED;;;;;2CACiB;AACf,iBAAKG,YAAL,CAAkB,SAAlB,EAA6B,kDAA7B,EAAiF,CAAjF;AACD;;;4CAGiB,CAEjB,C,CADC;AAGF;;;;2CACiB,CAEhB,C,CADC;AAGF;;;;+CACqB,CAEpB,C,CADC;AAGF;;;;wCACc,CACZ;AACD;;;+BAEIC,K,EAAOC,I,EAAM;AAChB,iBAAKR,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,YAAM;AAC7B,kBAAMQ,eAAe,GAAGD,IAAI,CAACE,IAAL,CAAU,kBAAV,CAAxB;AACAD,cAAAA,eAAe,CAACE,GAAhB,CAAoB,kBAApB,EAAwC,SAAxC;AACD,aAHD;AAID;;;;QAzC8BnB,S;;;;AA4CjCG,MAAAA,WAAW,CAACiB,WAAZ,GAA0B,aAA1B","sourcesContent":["import {PanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport './css/anomaly-panel.css!';\n\nconst panelDefaults = {};\n\n// http://docs.grafana.org/plugins/developing/development/\nexport class AnomalyCtrl extends PanelCtrl {\n\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaultsDeep(this.panel, panelDefaults);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n  }\n\n  // Grafana event handler: Add tabs when editing a panel\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/grafana-anomaly-panel/editor.html', 2);\n  }\n\n  // Grafana event handler: Cleanup\n  onPanelTeardown() {\n    // TODO\n  }\n\n  // Grafana event handler: Event triggered on data refresh\n  onDataReceived() {\n    // TODO\n  }\n\n  // Grafana event handler: Event triggered to load data when in snapshot mode\n  onDataSnapshotLoad() {\n    // TODO\n  }\n\n  // Grafana event handler: Handles errors on dashboard refresh\n  onDataError() {\n    // TODO\n  }\n\n  link(scope, elem) {\n    this.events.on('render', () => {\n      const $panelContainer = elem.find('.panel-container');\n      $panelContainer.css('background-color', '#00FF00');\n    })\n  }\n}\n\nAnomalyCtrl.templateUrl = 'module.html';\n"],"file":"anomaly_ctrl.js"}