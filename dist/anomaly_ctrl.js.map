{"version":3,"sources":["../src/anomaly_ctrl.js"],"names":["PanelCtrl","_","panelDefaults","bgColor","AnomalyCtrl","$scope","$injector","defaultsDeep","panel","events","on","onInitEditMode","bind","onPanelTeardown","render","addEditorTab","scope","elem","$panelContainer","find","css","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAQA,MAAAA,S,kBAAAA,S;;AACDC,MAAAA,C;;;AAGDC,MAAAA,a,GAAgB;AACpBC,QAAAA,OAAO,EAAE;AADW,O;;6BAKTC,W;;;AAEX,6BAAYC,MAAZ,EAAoBC,SAApB,EAA+B;AAAA;;AAAA;;AAC7B,4HAAMD,MAAN,EAAcC,SAAd;;AACAL,UAAAA,CAAC,CAACM,YAAF,CAAe,MAAKC,KAApB,EAA2BN,aAA3B;;AAEA,gBAAKO,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKC,cAAL,CAAoBC,IAApB,OAAjC;;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKG,eAAL,CAAqBD,IAArB,OAAjC;;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,mBAAf,EAAoC,MAAKI,MAAL,CAAYF,IAAZ,OAApC;;AAN6B;AAO9B,S,CAED;;;;;2CACiB;AACf,iBAAKG,YAAL,CAAkB,SAAlB,EAA6B,2DAA7B,EAA0F,CAA1F;AACD;;;4CAGiB,CAEjB,C,CADC;AAGF;;;;2CACiB,CAEhB,C,CADC;AAGF;;;;+CACqB,CAEpB,C,CADC;AAGF;;;;wCACc,CACZ;AACD;;;+BAEIC,K,EAAOC,I,EAAM;AAAA;;AAChB,iBAAKR,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,YAAM;AAC7B,kBAAMQ,eAAe,GAAGD,IAAI,CAACE,IAAL,CAAU,kBAAV,CAAxB;;AACA,kBAAI,MAAI,CAACX,KAAL,CAAWL,OAAf,EAAwB;AACtBe,gBAAAA,eAAe,CAACE,GAAhB,CAAoB,kBAApB,EAAwC,MAAI,CAACZ,KAAL,CAAWL,OAAnD;AACD,eAFD,MAEO;AACLe,gBAAAA,eAAe,CAACE,GAAhB,CAAoB,kBAApB,EAAwC,EAAxC;AACD;AACF,aAPD;AAQD;;;;QA7C8BpB,S;;;;AAgDjCI,MAAAA,WAAW,CAACiB,WAAZ,GAA0B,sBAA1B","sourcesContent":["import {PanelCtrl} from 'app/plugins/sdk';\nimport _ from 'lodash';\nimport './css/anomaly-panel.css!';\n\nconst panelDefaults = {\n  bgColor: null\n};\n\n// http://docs.grafana.org/plugins/developing/development/\nexport class AnomalyCtrl extends PanelCtrl {\n\n  constructor($scope, $injector) {\n    super($scope, $injector);\n    _.defaultsDeep(this.panel, panelDefaults);\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n  }\n\n  // Grafana event handler: Add tabs when editing a panel\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/grafana-anomaly-panel/partials/editor.html', 2);\n  }\n\n  // Grafana event handler: Cleanup\n  onPanelTeardown() {\n    // TODO\n  }\n\n  // Grafana event handler: Event triggered on data refresh\n  onDataReceived() {\n    // TODO\n  }\n\n  // Grafana event handler: Event triggered to load data when in snapshot mode\n  onDataSnapshotLoad() {\n    // TODO\n  }\n\n  // Grafana event handler: Handles errors on dashboard refresh\n  onDataError() {\n    // TODO\n  }\n\n  link(scope, elem) {\n    this.events.on('render', () => {\n      const $panelContainer = elem.find('.panel-container');\n      if (this.panel.bgColor) {\n        $panelContainer.css('background-color', this.panel.bgColor);\n      } else {\n        $panelContainer.css('background-color', '');\n      }\n    })\n  }\n}\n\nAnomalyCtrl.templateUrl = 'partials/module.html';\n"],"file":"anomaly_ctrl.js"}